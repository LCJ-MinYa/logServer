{
    "version": 3,
    "sources": [
        "../../../src/controller/life/creatPassword.js"
    ],
    "names": [
        "BaseRest",
        "require",
        "CreatPassword",
        "indexAction",
        "isPost",
        "PasswordList",
        "think",
        "mongo",
        "param",
        "post",
        "accessToken",
        "result",
        "where",
        "uid",
        "title",
        "url",
        "userName",
        "password",
        "thenAdd",
        "console",
        "log",
        "type",
        "success",
        "_id",
        "fail"
    ],
    "mappings": ";;;;AAAA,MAAMA,WAAWC,QAAQ,WAAR,CAAjB;;AAEe,MAAMC,aAAN,SAA4BF,QAA5B,CAAqC;AAC7CG,YAAN,GAAoB;AAAA;;AAAA;AACnB;;;;;;;;;;;AAWA,OAAI,MAAKC,MAAT,EAAiB;AAChB,UAAMC,eAAeC,MAAMC,KAAN,CAAY,cAAZ,EAA4B,eAA5B,CAArB;AACA,QAAIC,QAAQ,MAAKC,IAAL,EAAZ;AACA,WAAOD,MAAME,WAAb;AACA,QAAIC,SAAS,MAAMN,aAAaO,KAAb,CAAmB;AACrCC,UAAKL,MAAMK,GAD0B;AAErCC,YAAON,MAAMM,KAFwB;AAGrCC,UAAKP,MAAMO,GAH0B;AAIrCC,eAAUR,MAAMQ,QAJqB;AAKrCC,eAAUT,MAAMS;AALqB,KAAnB,EAMhBC,OANgB,CAMRV,KANQ,CAAnB;AAOAW,YAAQC,GAAR,CAAYT,MAAZ;AACA,QAAIA,OAAOU,IAAP,IAAe,KAAnB,EAA0B;AACzB,WAAKC,OAAL,CAAa;AACZC,WAAKZ,OAAOY;AADA,MAAb,EAEG,YAFH;AAGA,KAJD,MAIO;AACN,WAAKC,IAAL,CAAU,GAAV,EAAe,aAAf;AACA;AACD;AA/BkB;AAgCnB;AAjCkD;kBAA/BtB,a",
    "file": "../../../src/controller/life/creatPassword.js",
    "sourcesContent": [
        "const BaseRest = require('./rest.js');\n\nexport default class CreatPassword extends BaseRest {\n\tasync indexAction() {\n\t\t/* 连接多个数据库写法mongoPassword对应adapter.js中第二个object\n\t\t==>\tmongoPassword: {\n        \t\thost: host,\n        \t\tport: port,\n        \t\tuser: user,\n        \t\tpassword: password,\n        \t\tdatabase: database,\n        \t\tprefix: '',\n\t\t\t}\n\t\t\tmongoPassword的名称对应think.mongo的第二个参数（这个名称为自己命名的数据库配置名称）\n\t\t*/\n\t\tif (this.isPost) {\n\t\t\tconst PasswordList = think.mongo('PasswordList', 'mongoPassword');\n\t\t\tlet param = this.post();\n\t\t\tdelete param.accessToken;\n\t\t\tlet result = await PasswordList.where({\n\t\t\t\tuid: param.uid,\n\t\t\t\ttitle: param.title,\n\t\t\t\turl: param.url,\n\t\t\t\tuserName: param.userName,\n\t\t\t\tpassword: param.password,\n\t\t\t}).thenAdd(param);\n\t\t\tconsole.log(result);\n\t\t\tif (result.type == 'add') {\n\t\t\t\tthis.success({\n\t\t\t\t\t_id: result._id\n\t\t\t\t}, '新增密码数据信息成功');\n\t\t\t} else {\n\t\t\t\tthis.fail(401, '已存在相同密码数据信息');\n\t\t\t}\n\t\t}\n\t}\n}"
    ]
}