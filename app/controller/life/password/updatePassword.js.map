{
    "version": 3,
    "sources": [
        "../../../../src/controller/life/password/updatePassword.js"
    ],
    "names": [
        "BaseRest",
        "require",
        "UpdataPassword",
        "indexAction",
        "PasswordList",
        "think",
        "mongo",
        "param",
        "post",
        "accessToken",
        "result",
        "where",
        "_id",
        "select",
        "length",
        "shouldUpdate",
        "i",
        "affectedRows",
        "update",
        "success",
        "fail"
    ],
    "mappings": ";;;;AAAA,MAAMA,WAAWC,QAAQ,YAAR,CAAjB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4Ce,MAAMC,cAAN,SAA6BF,QAA7B,CAAsC;AAC3CG,eAAN,GAAoB;AAAA;;AAAA;AAChB,kBAAMC,eAAeC,MAAMC,KAAN,CAAY,cAAZ,EAA4B,eAA5B,CAArB;AACA,gBAAIC,QAAQ,MAAKC,IAAL,EAAZ;AACA,mBAAOD,MAAME,WAAb;AACA,gBAAIC,SAAS,MAAMN,aAAaO,KAAb,CAAmB;AAClCC,qBAAKL,MAAMK;AADuB,aAAnB,EAEhBC,MAFgB,EAAnB;AAGA,gBAAIH,OAAOI,MAAP,KAAkB,CAAtB,EAAyB;AACrB,oBAAIC,eAAe,KAAnB;AACA,qBAAK,IAAIC,CAAT,IAAcT,KAAd,EAAqB;AACjB,wBAAIS,KAAK,WAAL,IAAoBA,KAAK,KAAzB,IAAkCA,KAAK,KAA3C,EAAkD;AAC9C;AACH;AACD,wBAAIT,MAAMS,CAAN,MAAaN,OAAO,CAAP,EAAUM,CAAV,CAAjB,EAA+B;AAC3BD,uCAAe,IAAf;AACH;AACJ;AACD,oBAAIA,YAAJ,EAAkB;AACd,wBAAIE,eAAe,MAAMb,aAAaO,KAAb,CAAmB;AACxCC,6BAAKL,MAAMK;AAD6B,qBAAnB,EAEtBM,MAFsB,CAEfX,KAFe,CAAzB;AAGA,wBAAIU,YAAJ,EAAkB;AACd,8BAAKE,OAAL,CAAa,EAAb,EAAiB,YAAjB;AACA,+BAAO,KAAP;AACH,qBAHD,MAGO;AACH,8BAAKC,IAAL,CAAU,GAAV,EAAe,YAAf;AACA,+BAAO,KAAP;AACH;AACJ,iBAXD,MAWO;AACH,0BAAKA,IAAL,CAAU,GAAV,EAAe,cAAf;AACA,2BAAO,KAAP;AACH;AACJ,aAzBD,MAyBO;AACH,sBAAKA,IAAL,CAAU,GAAV,EAAe,WAAf;AACA,uBAAO,KAAP;AACH;AAnCe;AAoCnB;AArCgD;kBAAhClB,c",
    "file": "../../../../src/controller/life/password/updatePassword.js",
    "sourcesContent": [
        "const BaseRest = require('../rest.js');\n\n/**\n * @api {post} /life/password/updatePassword 更新密码\n * @apiDescription 根据密码信息更新密码\n * @apiGroup passwordGroup\n * @apiVersion 1.0.0\n *\n * @apiParam {String} _id 密码id\n * @apiParam {String} type 密码类型\n * @apiParam {String} title 标题\n * @apiParam {String} url 密码所属网站\n * @apiParam {String} userName 用户名\n * @apiParam {String} password 密码\n * @apiParam {String} importance 重要性\n * @apiParam {String} notes 备注\n * @apiUse baseHasLoginParams\n *\n * @apiParamExample {string} 请求参数格式:\n *  {\n *      \"_id\": \"_id\",\n *      \"type\": \"social\",\n *      \"title\": \"title\",\n *      \"url\": \"url\",\n *      \"userName\": \"userName\",\n *      \"password\": \"password\",\n *      \"importance\": \"importance\",\n *      \"notes\": \"notes\",\n *      \"timestamp\": 1543578242441,\n *      \"accessToken\": 'e2b06cd',\n *      \"uid\": 'user-uid'\n *  }\n *\n * @apiUse baseSuccessParams\n *\n * @apiSuccessExample {json} 正确返回值:\n *  {\n *      \"data\": {},\n *      \"errno\": 0,\n *      \"errmsg\": \"创建密码列表成功\"\n *  }\n *  @apiUse CODE_UID_203\n *  @apiUse CODE_REFUSE_401\n *  @apiUse CODE_METHOD_GET_403\n *  @apiUse CODE_METHOD_POST_403\n */\nexport default class UpdataPassword extends BaseRest {\n    async indexAction() {\n        const PasswordList = think.mongo('PasswordList', 'mongoPassword');\n        let param = this.post();\n        delete param.accessToken;\n        let result = await PasswordList.where({\n            _id: param._id\n        }).select();\n        if (result.length !== 0) {\n            let shouldUpdate = false;\n            for (let i in param) {\n                if (i == 'timestamp' || i == '_id' || i == 'uid') {\n                    continue;\n                }\n                if (param[i] !== result[0][i]) {\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                let affectedRows = await PasswordList.where({\n                    _id: param._id\n                }).update(param);\n                if (affectedRows) {\n                    this.success({}, '修改密码数据信息成功');\n                    return false;\n                } else {\n                    this.fail(401, '修改密码数据信息失败');\n                    return false;\n                }\n            } else {\n                this.fail(401, '密码信息相同,不需要修改');\n                return false;\n            }\n        } else {\n            this.fail(401, '未匹配到该密码信息');\n            return false;\n        }\n    }\n}"
    ]
}