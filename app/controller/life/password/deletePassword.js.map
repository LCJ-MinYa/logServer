{
    "version": 3,
    "sources": [
        "../../../../src/controller/life/password/deletePassword.js"
    ],
    "names": [
        "BaseRest",
        "require",
        "DeletePassword",
        "indexAction",
        "isPost",
        "param",
        "post",
        "PasswordList",
        "think",
        "mongo",
        "result",
        "where",
        "_id",
        "delete",
        "success",
        "fail"
    ],
    "mappings": ";;;;AAAA,MAAMA,WAAWC,QAAQ,YAAR,CAAjB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8Be,MAAMC,cAAN,SAA6BF,QAA7B,CAAsC;AAC3CG,eAAN,GAAoB;AAAA;;AAAA;AAChB,gBAAI,MAAKC,MAAT,EAAiB;AACb,oBAAIC,QAAQ,MAAKC,IAAL,EAAZ;AACA,sBAAMC,eAAeC,MAAMC,KAAN,CAAY,cAAZ,EAA4B,eAA5B,CAArB;AACA,oBAAIC,SAAS,MAAMH,aAAaI,KAAb,CAAmB;AAClCC,yBAAKP,MAAMO;AADuB,iBAAnB,EAEhBC,MAFgB,EAAnB;AAGA,oBAAIH,MAAJ,EAAY;AACR,0BAAKI,OAAL,CAAa,EAAb,EAAiB,YAAjB;AACH,iBAFD,MAEO;AACH,0BAAKC,IAAL,CAAU,GAAV,EAAe,YAAf;AACH;AACJ;AAZe;AAanB;AAdgD;kBAAhCb,c",
    "file": "../../../../src/controller/life/password/deletePassword.js",
    "sourcesContent": [
        "const BaseRest = require('../rest.js');\n\n/**\n * @api {post} /life/password/deletePassword 删除密码\n * @apiDescription 删除当前选中{_id}的密码信息\n * @apiGroup passwordGroup\n * @apiVersion 1.0.0\n *\n * @apiParam {String} _id 密码id\n * @apiUse baseHasLoginParams\n *\n * @apiParamExample {string} 请求参数格式:\n *  {\n *      \"_id\": \"_id\",\n *      \"timestamp\": 1543578242441,\n *      \"accessToken\": 'e2b06cd',\n *      \"uid\": 'user-uid'\n *  }\n *\n * @apiUse baseSuccessParams\n *\n * @apiSuccessExample {json} 正确返回值:\n *  {\n *      \"data\": {},\n *      \"errno\": 0,\n *      \"errmsg\": \"删除密码数据信息成功\"\n *  }\n *  @apiUse CODE_UID_203\n *  @apiUse CODE_REFUSE_401\n *  @apiUse CODE_METHOD_GET_403\n *  @apiUse CODE_METHOD_POST_403\n */\nexport default class DeletePassword extends BaseRest {\n    async indexAction() {\n        if (this.isPost) {\n            let param = this.post();\n            const PasswordList = think.mongo('PasswordList', 'mongoPassword');\n            let result = await PasswordList.where({\n                _id: param._id\n            }).delete();\n            if (result) {\n                this.success({}, '删除密码数据信息成功');\n            } else {\n                this.fail(401, '删除密码数据信息失败');\n            }\n        }\n    }\n}"
    ]
}