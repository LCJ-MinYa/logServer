{
    "version": 3,
    "sources": [
        "../../../src/controller/life/rest.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "Controller",
        "_REST",
        "constructor",
        "ctx",
        "resource",
        "getResource",
        "id",
        "getId",
        "modelInstance",
        "mongo",
        "__before",
        "controller",
        "get",
        "isString",
        "isNumber",
        "last",
        "path",
        "split",
        "slice",
        "getAction",
        "data",
        "pk",
        "where",
        "find",
        "success",
        "select",
        "postAction",
        "post",
        "isEmpty",
        "fail",
        "insertId",
        "add",
        "deleteAction",
        "rows",
        "delete",
        "affectedRows",
        "putAction",
        "update",
        "__call"
    ],
    "mappings": "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",
    "file": "../../../src/controller/life/rest.js",
    "sourcesContent": [
        "module.exports = class extends think.Controller {\n    static get _REST() {\n        return true;\n    }\n\n    constructor(ctx) {\n        super(ctx);\n        this.resource = this.getResource();\n        this.id = this.getId();\n        this.modelInstance = this.mongo(this.resource);\n    }\n    __before() {}\n    /**\n     * get resource\n     * @return {String} [resource name]\n     */\n    getResource() {\n        return this.ctx.controller;\n    }\n    getId() {\n        const id = this.get('id');\n        if (id && (think.isString(id) || think.isNumber(id))) {\n            return id;\n        }\n        const last = this.ctx.path.split('/').slice(-1)[0];\n        if (last !== this.resource) {\n            return last;\n        }\n        return '';\n    }\n    async getAction() {\n        let data;\n        if (this.id) {\n            const pk = this.modelInstance.pk;\n            data = await this.modelInstance.where({\n                [pk]: this.id\n            }).find();\n            return this.success(data);\n        }\n        data = await this.modelInstance.select();\n        return this.success(data);\n    }\n    /**\n     * put resource\n     * @return {Promise} []\n     */\n    async postAction() {\n        const pk = this.modelInstance.pk;\n        const data = this.post();\n        delete data[pk];\n        if (think.isEmpty(data)) {\n            return this.fail('data is empty');\n        }\n        const insertId = await this.modelInstance.add(data);\n        return this.success({\n            id: insertId\n        });\n    }\n    /**\n     * delete resource\n     * @return {Promise} []\n     */\n    async deleteAction() {\n        if (!this.id) {\n            return this.fail('params error');\n        }\n        const pk = this.modelInstance.pk;\n        const rows = await this.modelInstance.where({\n            [pk]: this.id\n        }).delete();\n        return this.success({\n            affectedRows: rows\n        });\n    }\n    /**\n     * update resource\n     * @return {Promise} []\n     */\n    async putAction() {\n        if (!this.id) {\n            return this.fail('params error');\n        }\n        const pk = this.modelInstance.pk;\n        const data = this.post();\n        delete data[pk];\n        if (think.isEmpty(data)) {\n            return this.fail('data is empty');\n        }\n        const rows = await this.modelInstance.where({\n            [pk]: this.id\n        }).update(data);\n        return this.success({\n            affectedRows: rows\n        });\n    }\n    __call() {}\n};"
    ]
}