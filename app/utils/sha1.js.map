{
    "version": 3,
    "sources": [
        "../../src/utils/sha1.js"
    ],
    "names": [
        "rotateLeft",
        "lValue",
        "iShiftBits",
        "lsbHex",
        "value",
        "string",
        "i",
        "vh",
        "vl",
        "toString",
        "cvtHex",
        "v",
        "uTF8Encode",
        "replace",
        "output",
        "n",
        "length",
        "c",
        "charCodeAt",
        "String",
        "fromCharCode",
        "sha1",
        "blockstart",
        "j",
        "W",
        "Array",
        "H0",
        "H1",
        "H2",
        "H3",
        "H4",
        "A",
        "B",
        "C",
        "D",
        "E",
        "tempValue",
        "stringLength",
        "wordArray",
        "push",
        "toLowerCase",
        "module",
        "exports"
    ],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAIA,aAAa,UAASC,MAAT,EAAiBC,UAAjB,EAA6B;AAC1C,WAAQD,UAAUC,UAAX,GAA0BD,WAAY,KAAKC,UAAlD;AACH,CAFD;;AAIA,IAAIC,SAAS,UAASC,KAAT,EAAgB;AACzB,QAAIC,SAAS,EAAb;AACA,QAAIC,CAAJ;AACA,QAAIC,EAAJ;AACA,QAAIC,EAAJ;AACA,SAAKF,IAAI,CAAT,EAAYA,KAAK,CAAjB,EAAoBA,KAAK,CAAzB,EAA4B;AACxBC,aAAMH,UAAWE,IAAI,CAAJ,GAAQ,CAApB,GAA0B,IAA/B;AACAE,aAAMJ,UAAWE,IAAI,CAAhB,GAAsB,IAA3B;AACAD,kBAAUE,GAAGE,QAAH,CAAY,EAAZ,IAAkBD,GAAGC,QAAH,CAAY,EAAZ,CAA5B;AACH;AACD,WAAOJ,MAAP;AACH,CAXD;;AAaA,IAAIK,SAAS,UAASN,KAAT,EAAgB;AACzB,QAAIC,SAAS,EAAb;AACA,QAAIC,CAAJ;AACA,QAAIK,CAAJ;AACA,SAAKL,IAAI,CAAT,EAAYA,KAAK,CAAjB,EAAoBA,GAApB,EAAyB;AACrBK,YAAKP,UAAWE,IAAI,CAAhB,GAAsB,IAA1B;AACAD,kBAAUM,EAAEF,QAAF,CAAW,EAAX,CAAV;AACH;AACD,WAAOJ,MAAP;AACH,CATD;;AAWA,IAAIO,aAAa,UAASP,MAAT,EAAiB;AAC9BA,aAASA,OAAOQ,OAAP,CAAe,WAAf,EAA4B,MAA5B,CAAT;AACA,QAAIC,SAAS,EAAb;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIV,OAAOW,MAA3B,EAAmCD,GAAnC,EAAwC;AACpC,YAAIE,IAAIZ,OAAOa,UAAP,CAAkBH,CAAlB,CAAR;AACA,YAAIE,IAAI,GAAR,EAAa;AACTH,sBAAUK,OAAOC,YAAP,CAAoBH,CAApB,CAAV;AACH,SAFD,MAEO,IAAKA,IAAI,GAAL,IAAcA,IAAI,IAAtB,EAA6B;AAChCH,sBAAUK,OAAOC,YAAP,CAAqBH,KAAK,CAAN,GAAW,GAA/B,CAAV;AACAH,sBAAUK,OAAOC,YAAP,CAAqBH,IAAI,EAAL,GAAW,GAA/B,CAAV;AACH,SAHM,MAGA;AACHH,sBAAUK,OAAOC,YAAP,CAAqBH,KAAK,EAAN,GAAY,GAAhC,CAAV;AACAH,sBAAUK,OAAOC,YAAP,CAAsBH,KAAK,CAAN,GAAW,EAAZ,GAAkB,GAAtC,CAAV;AACAH,sBAAUK,OAAOC,YAAP,CAAqBH,IAAI,EAAL,GAAW,GAA/B,CAAV;AACH;AACJ;AACD,WAAOH,MAAP;AACH,CAjBD;;AAmBA,IAAIO,OAAO,UAAShB,MAAT,EAAiB;AACxB,QAAIiB,UAAJ;AACA,QAAIhB,CAAJ,EAAOiB,CAAP;AACA,QAAIC,IAAI,IAAIC,KAAJ,CAAU,EAAV,CAAR;AACA,QAAIC,KAAK,UAAT;AACA,QAAIC,KAAK,UAAT;AACA,QAAIC,KAAK,UAAT;AACA,QAAIC,KAAK,UAAT;AACA,QAAIC,KAAK,UAAT;AACA,QAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB;AACA,QAAIC,SAAJ;AACA/B,aAASO,WAAWP,MAAX,CAAT;AACA,QAAIgC,eAAehC,OAAOW,MAA1B;AACA,QAAIsB,YAAY,IAAIb,KAAJ,EAAhB;AACA,SAAKnB,IAAI,CAAT,EAAYA,IAAI+B,eAAe,CAA/B,EAAkC/B,KAAK,CAAvC,EAA0C;AACtCiB,YAAIlB,OAAOa,UAAP,CAAkBZ,CAAlB,KAAwB,EAAxB,GAA6BD,OAAOa,UAAP,CAAkBZ,IAAI,CAAtB,KAA4B,EAAzD,GAA8DD,OAAOa,UAAP,CAAkBZ,IAAI,CAAtB,KAA4B,CAA1F,GAA8FD,OAAOa,UAAP,CAAkBZ,IAAI,CAAtB,CAAlG;AACAgC,kBAAUC,IAAV,CAAehB,CAAf;AACH;AACD,YAAQc,eAAe,CAAvB;AACI,aAAK,CAAL;AACI/B,gBAAI,WAAJ;AACA;AACJ,aAAK,CAAL;AACIA,gBAAID,OAAOa,UAAP,CAAkBmB,eAAe,CAAjC,KAAuC,EAAvC,GAA4C,SAAhD;AACA;AACJ,aAAK,CAAL;AACI/B,gBAAID,OAAOa,UAAP,CAAkBmB,eAAe,CAAjC,KAAuC,EAAvC,GAA4ChC,OAAOa,UAAP,CAAkBmB,eAAe,CAAjC,KAAuC,EAAnF,GAAwF,OAA5F;AACA;AACJ,aAAK,CAAL;AACI/B,gBAAID,OAAOa,UAAP,CAAkBmB,eAAe,CAAjC,KAAuC,EAAvC,GAA4ChC,OAAOa,UAAP,CAAkBmB,eAAe,CAAjC,KAAuC,EAAnF,GAAwFhC,OAAOa,UAAP,CAAkBmB,eAAe,CAAjC,KAAuC,CAA/H,GAAmI,IAAvI;AACA;AAZR;AAcAC,cAAUC,IAAV,CAAejC,CAAf;AACA,WAAQgC,UAAUtB,MAAV,GAAmB,EAApB,IAA2B,EAAlC,EAAsCsB,UAAUC,IAAV,CAAe,CAAf;AACtCD,cAAUC,IAAV,CAAeF,iBAAiB,EAAhC;AACAC,cAAUC,IAAV,CAAgBF,gBAAgB,CAAjB,GAAsB,WAArC;AACA,SAAKf,aAAa,CAAlB,EAAqBA,aAAagB,UAAUtB,MAA5C,EAAoDM,cAAc,EAAlE,EAAsE;AAClE,aAAKhB,IAAI,CAAT,EAAYA,IAAI,EAAhB,EAAoBA,GAApB,EAAyBkB,EAAElB,CAAF,IAAOgC,UAAUhB,aAAahB,CAAvB,CAAP;AACzB,aAAKA,IAAI,EAAT,EAAaA,KAAK,EAAlB,EAAsBA,GAAtB,EAA2BkB,EAAElB,CAAF,IAAON,WAAWwB,EAAElB,IAAI,CAAN,IAAWkB,EAAElB,IAAI,CAAN,CAAX,GAAsBkB,EAAElB,IAAI,EAAN,CAAtB,GAAkCkB,EAAElB,IAAI,EAAN,CAA7C,EAAwD,CAAxD,CAAP;AAC3ByB,YAAIL,EAAJ;AACAM,YAAIL,EAAJ;AACAM,YAAIL,EAAJ;AACAM,YAAIL,EAAJ;AACAM,YAAIL,EAAJ;AACA,aAAKxB,IAAI,CAAT,EAAYA,KAAK,EAAjB,EAAqBA,GAArB,EAA0B;AACtB8B,wBAAapC,WAAW+B,CAAX,EAAc,CAAd,KAAqBC,IAAIC,CAAL,GAAW,CAACD,CAAD,GAAKE,CAApC,IAA0CC,CAA1C,GAA8CX,EAAElB,CAAF,CAA9C,GAAqD,UAAtD,GAAoE,WAAhF;AACA6B,gBAAID,CAAJ;AACAA,gBAAID,CAAJ;AACAA,gBAAIjC,WAAWgC,CAAX,EAAc,EAAd,CAAJ;AACAA,gBAAID,CAAJ;AACAA,gBAAIK,SAAJ;AACH;AACD,aAAK9B,IAAI,EAAT,EAAaA,KAAK,EAAlB,EAAsBA,GAAtB,EAA2B;AACvB8B,wBAAapC,WAAW+B,CAAX,EAAc,CAAd,KAAoBC,IAAIC,CAAJ,GAAQC,CAA5B,IAAiCC,CAAjC,GAAqCX,EAAElB,CAAF,CAArC,GAA4C,UAA7C,GAA2D,WAAvE;AACA6B,gBAAID,CAAJ;AACAA,gBAAID,CAAJ;AACAA,gBAAIjC,WAAWgC,CAAX,EAAc,EAAd,CAAJ;AACAA,gBAAID,CAAJ;AACAA,gBAAIK,SAAJ;AACH;AACD,aAAK9B,IAAI,EAAT,EAAaA,KAAK,EAAlB,EAAsBA,GAAtB,EAA2B;AACvB8B,wBAAapC,WAAW+B,CAAX,EAAc,CAAd,KAAqBC,IAAIC,CAAL,GAAWD,IAAIE,CAAf,GAAqBD,IAAIC,CAA7C,IAAmDC,CAAnD,GAAuDX,EAAElB,CAAF,CAAvD,GAA8D,UAA/D,GAA6E,WAAzF;AACA6B,gBAAID,CAAJ;AACAA,gBAAID,CAAJ;AACAA,gBAAIjC,WAAWgC,CAAX,EAAc,EAAd,CAAJ;AACAA,gBAAID,CAAJ;AACAA,gBAAIK,SAAJ;AACH;AACD,aAAK9B,IAAI,EAAT,EAAaA,KAAK,EAAlB,EAAsBA,GAAtB,EAA2B;AACvB8B,wBAAapC,WAAW+B,CAAX,EAAc,CAAd,KAAoBC,IAAIC,CAAJ,GAAQC,CAA5B,IAAiCC,CAAjC,GAAqCX,EAAElB,CAAF,CAArC,GAA4C,UAA7C,GAA2D,WAAvE;AACA6B,gBAAID,CAAJ;AACAA,gBAAID,CAAJ;AACAA,gBAAIjC,WAAWgC,CAAX,EAAc,EAAd,CAAJ;AACAA,gBAAID,CAAJ;AACAA,gBAAIK,SAAJ;AACH;AACDV,aAAMA,KAAKK,CAAN,GAAW,WAAhB;AACAJ,aAAMA,KAAKK,CAAN,GAAW,WAAhB;AACAJ,aAAMA,KAAKK,CAAN,GAAW,WAAhB;AACAJ,aAAMA,KAAKK,CAAN,GAAW,WAAhB;AACAJ,aAAMA,KAAKK,CAAN,GAAW,WAAhB;AACH;AACD,QAAIC,YAAY1B,OAAOgB,EAAP,IAAahB,OAAOiB,EAAP,CAAb,GAA0BjB,OAAOkB,EAAP,CAA1B,GAAuClB,OAAOmB,EAAP,CAAvC,GAAoDnB,OAAOoB,EAAP,CAApE;AACA,WAAOM,UAAUI,WAAV,EAAP;AACH,CApFD;;AAsFAC,OAAOC,OAAP,GAAiB;AACbrB;AADa,CAAjB",
    "file": "../../src/utils/sha1.js",
    "sourcesContent": [
        "/** \n * jQuery SHA1 hash algorithm function \n * Download by http://www.bvbsoft.com \n *      <code> \n *              Calculate the sha1 hash of a String \n *              String $.sha1 ( String str ) \n *      </code> \n * \n * Calculates the sha1 hash of str using the US Secure Hash Algorithm 1. \n * SHA-1 the Secure Hash Algorithm (SHA) was developed by NIST and is specified in the Secure Hash Standard (SHS, FIPS 180). \n * This script is used to process variable length message into a fixed-length output using the SHA-1 algorithm. It is fully compatible with UTF-8 encoding. \n * If you plan using UTF-8 encoding in your project don't forget to set the page encoding to UTF-8 (Content-Type meta tag). \n * This function orginally get from the WebToolkit and rewrite for using as the jQuery plugin. \n * \n * Example \n *      Code \n *              <code> \n *                      $.sha1(\"I'm Persian.\"); \n *              </code> \n *      Result \n *              <code> \n *                      \"1d302f9dc925d62fc859055999d2052e274513ed\" \n *              </code> \n * \n * @alias Muhammad Hussein Fattahizadeh < muhammad [AT] semnanweb [DOT] com > \n * @link http://www.semnanweb.com/jquery-plugin/sha1.html \n * @see http://www.webtoolkit.info/ \n * @license http://www.gnu.org/licenses/gpl.html [GNU General Public License] \n * @param {jQuery} {sha1:function(string)) \n * @return string \n */\n\nvar rotateLeft = function(lValue, iShiftBits) {\n    return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));\n}\n\nvar lsbHex = function(value) {\n    var string = \"\";\n    var i;\n    var vh;\n    var vl;\n    for (i = 0; i <= 6; i += 2) {\n        vh = (value >>> (i * 4 + 4)) & 0x0f;\n        vl = (value >>> (i * 4)) & 0x0f;\n        string += vh.toString(16) + vl.toString(16);\n    }\n    return string;\n};\n\nvar cvtHex = function(value) {\n    var string = \"\";\n    var i;\n    var v;\n    for (i = 7; i >= 0; i--) {\n        v = (value >>> (i * 4)) & 0x0f;\n        string += v.toString(16);\n    }\n    return string;\n};\n\nvar uTF8Encode = function(string) {\n    string = string.replace(/\\x0d\\x0a/g, \"\\x0a\");\n    var output = \"\";\n    for (var n = 0; n < string.length; n++) {\n        var c = string.charCodeAt(n);\n        if (c < 128) {\n            output += String.fromCharCode(c);\n        } else if ((c > 127) && (c < 2048)) {\n            output += String.fromCharCode((c >> 6) | 192);\n            output += String.fromCharCode((c & 63) | 128);\n        } else {\n            output += String.fromCharCode((c >> 12) | 224);\n            output += String.fromCharCode(((c >> 6) & 63) | 128);\n            output += String.fromCharCode((c & 63) | 128);\n        }\n    }\n    return output;\n};\n\nvar sha1 = function(string) {\n    var blockstart;\n    var i, j;\n    var W = new Array(80);\n    var H0 = 0x67452301;\n    var H1 = 0xEFCDAB89;\n    var H2 = 0x98BADCFE;\n    var H3 = 0x10325476;\n    var H4 = 0xC3D2E1F0;\n    var A, B, C, D, E;\n    var tempValue;\n    string = uTF8Encode(string);\n    var stringLength = string.length;\n    var wordArray = new Array();\n    for (i = 0; i < stringLength - 3; i += 4) {\n        j = string.charCodeAt(i) << 24 | string.charCodeAt(i + 1) << 16 | string.charCodeAt(i + 2) << 8 | string.charCodeAt(i + 3);\n        wordArray.push(j);\n    }\n    switch (stringLength % 4) {\n        case 0:\n            i = 0x080000000;\n            break;\n        case 1:\n            i = string.charCodeAt(stringLength - 1) << 24 | 0x0800000;\n            break;\n        case 2:\n            i = string.charCodeAt(stringLength - 2) << 24 | string.charCodeAt(stringLength - 1) << 16 | 0x08000;\n            break;\n        case 3:\n            i = string.charCodeAt(stringLength - 3) << 24 | string.charCodeAt(stringLength - 2) << 16 | string.charCodeAt(stringLength - 1) << 8 | 0x80;\n            break;\n    }\n    wordArray.push(i);\n    while ((wordArray.length % 16) != 14) wordArray.push(0);\n    wordArray.push(stringLength >>> 29);\n    wordArray.push((stringLength << 3) & 0x0ffffffff);\n    for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n        for (i = 0; i < 16; i++) W[i] = wordArray[blockstart + i];\n        for (i = 16; i <= 79; i++) W[i] = rotateLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n        A = H0;\n        B = H1;\n        C = H2;\n        D = H3;\n        E = H4;\n        for (i = 0; i <= 19; i++) {\n            tempValue = (rotateLeft(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = tempValue;\n        }\n        for (i = 20; i <= 39; i++) {\n            tempValue = (rotateLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = tempValue;\n        }\n        for (i = 40; i <= 59; i++) {\n            tempValue = (rotateLeft(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = tempValue;\n        }\n        for (i = 60; i <= 79; i++) {\n            tempValue = (rotateLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\n            E = D;\n            D = C;\n            C = rotateLeft(B, 30);\n            B = A;\n            A = tempValue;\n        }\n        H0 = (H0 + A) & 0x0ffffffff;\n        H1 = (H1 + B) & 0x0ffffffff;\n        H2 = (H2 + C) & 0x0ffffffff;\n        H3 = (H3 + D) & 0x0ffffffff;\n        H4 = (H4 + E) & 0x0ffffffff;\n    }\n    var tempValue = cvtHex(H0) + cvtHex(H1) + cvtHex(H2) + cvtHex(H3) + cvtHex(H4);\n    return tempValue.toLowerCase();\n}\n\nmodule.exports = {\n    sha1\n}"
    ]
}